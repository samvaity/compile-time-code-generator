// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.assistants.models;

import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;

/**
 * The data provided during a tool outputs submission to resolve pending tool calls and allow the model to continue.
 */

public final class ToolOutput implements JsonSerializable<ToolOutput> {

    /*
     * The ID of the tool call being resolved, as provided in the tool calls of a required action from a run.
     */

    private String toolCallId;

    /*
     * The output from the tool to be submitted.
     */

    private String output;

    /**
     * Creates an instance of ToolOutput class.
     */

    public ToolOutput() {
    }

    /**
     * Get the toolCallId property: The ID of the tool call being resolved, as provided in the tool calls of a required
     * action from a run.
     *
     * @return the toolCallId value.
     */

    public String getToolCallId() {
        return this.toolCallId;
    }

    /**
     * Set the toolCallId property: The ID of the tool call being resolved, as provided in the tool calls of a required
     * action from a run.
     *
     * @param toolCallId the toolCallId value to set.
     * @return the ToolOutput object itself.
     */

    public ToolOutput setToolCallId(String toolCallId) {
        this.toolCallId = toolCallId;
        return this;
    }

    /**
     * Get the output property: The output from the tool to be submitted.
     *
     * @return the output value.
     */

    public String getOutput() {
        return this.output;
    }

    /**
     * Set the output property: The output from the tool to be submitted.
     *
     * @param output the output value to set.
     * @return the ToolOutput object itself.
     */

    public ToolOutput setOutput(String output) {
        this.output = output;
        return this;
    }

    /**
     * {@inheritDoc}
     */

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("tool_call_id", this.toolCallId);
        jsonWriter.writeStringField("output", this.output);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ToolOutput from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of ToolOutput if the JsonReader was pointing to an instance of it, or null if it was pointing
     * to JSON null.
     * @throws IOException If an error occurs while reading the ToolOutput.
     */

    public static ToolOutput fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ToolOutput deserializedToolOutput = new ToolOutput();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("tool_call_id".equals(fieldName)) {
                    deserializedToolOutput.toolCallId = reader.getString();
                } else if ("output".equals(fieldName)) {
                    deserializedToolOutput.output = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return deserializedToolOutput;
        });
    }
}
