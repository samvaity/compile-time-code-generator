// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.azure.ai.openai.assistants.implementation.models;


import io.clientcore.core.json.JsonReader;
import io.clientcore.core.json.JsonSerializable;
import io.clientcore.core.json.JsonToken;
import io.clientcore.core.json.JsonWriter;
import java.io.IOException;

/**
 * The CreateVectorStoreFileRequest model.
 */

public final class CreateVectorStoreFileRequest implements JsonSerializable<CreateVectorStoreFileRequest> {

    /*
     * A File ID that the vector store should use. Useful for tools like `file_search` that can access files.
     */
    
    private final String fileId;

    /**
     * Creates an instance of CreateVectorStoreFileRequest class.
     *
     * @param fileId the fileId value to set.
     */
    
    public CreateVectorStoreFileRequest(String fileId) {
        this.fileId = fileId;
    }

    /**
     * Get the fileId property: A File ID that the vector store should use. Useful for tools like `file_search` that can
     * access files.
     *
     * @return the fileId value.
     */
    
    public String getFileId() {
        return this.fileId;
    }

    /**
     * {@inheritDoc}
     */
    
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("file_id", this.fileId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CreateVectorStoreFileRequest from the JsonReader.
     *
     * @param jsonReader The JsonReader being read.
     * @return An instance of CreateVectorStoreFileRequest if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CreateVectorStoreFileRequest.
     */
    
    public static CreateVectorStoreFileRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String fileId = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();
                if ("file_id".equals(fieldName)) {
                    fileId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new CreateVectorStoreFileRequest(fileId);
        });
    }
}
