// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package com.service.clientlibrary.models;

import io.clientcore.core.util.ExpandableEnum;

import java.util.Collection;
import java.util.Map;
import java.util.Objects;
import java.util.concurrent.ConcurrentHashMap;

/**
 * A description of the intended purpose of a message within a chat completions interaction.
 */
public final class ChatRole implements ExpandableEnum<ChatRole> {
    private static final Map<String, ChatRole> VALUES = new ConcurrentHashMap<>();

    private final String caseSensitive;
    private final String caseInsensitive;

    private ChatRole(String name) {
        this.caseSensitive = name;
        this.caseInsensitive = name.toLowerCase();
    }

    @Override
    public ChatRole getValue() {
        return ChatRole.fromString(caseSensitive);
    }

    /**
     * Gets all known {@link ChatRole} values.
     *
     * @return The known {@link ChatRole} values.
     */
    public static Collection<ChatRole> values() {
        return VALUES.values();
    }

    /**
     * Creates or finds a {@link ChatRole} for the passed {@code name}.
     *
     * <p>{@code null} will be returned if {@code name} is {@code null}.</p>
     *
     * @param name A name to look for.
     *
     * @return The corresponding {@link ChatRole} of the provided name, or {@code null} if {@code name} was
     * {@code null}.
     */
    public static ChatRole fromString(String name) {
        if (name == null) {
            return null;
        }

        ChatRole exceptionType = VALUES.get(name);

        if (exceptionType != null) {
            return exceptionType;
        }

        return VALUES.computeIfAbsent(name, ChatRole::new);
    }

    @Override
    public String toString() {
        return caseSensitive;
    }

    @Override
    public int hashCode() {
        return caseInsensitive.hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof ChatRole)) {
            return false;
        }

        ChatRole other = (ChatRole) obj;

        return Objects.equals(caseInsensitive, other.caseInsensitive);
    }
    /**
     * The role that instructs or sets the behavior of the assistant.
     */
    
    public static final ChatRole SYSTEM = fromString("system");

    /**
     * The role that provides responses to system-instructed, user-prompted input.
     */
    
    public static final ChatRole ASSISTANT = fromString("assistant");

    /**
     * The role that provides input for chat completions.
     */
    
    public static final ChatRole USER = fromString("user");

    /**
     * The role that provides function results for chat completions.
     */
    
    public static final ChatRole FUNCTION = fromString("function");

    /**
     * The role that represents extension tool activity within a chat completions operation.
     */
    
    public static final ChatRole TOOL = fromString("tool");
}
